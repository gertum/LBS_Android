<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".ui.hello.HelloFragment">

    <TextView
        android:id="@+id/textViewHello"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="
UserMeasurementFragment uses a ViewModel component (UserMeasurementListViewModel) for managing and observing data related to the UI, ensuring that data survives configuration changes (like screen rotations) without being lost. This is a common and recommended pattern to handle UI-related data in a lifecycle-conscious manner.

SignalMapFragment, however, does not use a dedicated ViewModel but instead observes LiveData directly from multiple DAOs (such as MeasurementDao, SignalStrengthDao, and UserMeasurementDAO). While it still uses LiveData to manage and display data, it doesn't utilize a centralized ViewModel for managing the UI-related data. Instead, it interacts directly with the data sources.
"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>
